"""Create tags and tag_types tables

Revision ID: 1393d3c73e50
Revises: c5e2e6c94076
Create Date: 2025-04-15 18:17:39.307523

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "1393d3c73e50"
down_revision: Union[str, None] = "c5e2e6c94076"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tag_types",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "place_type",
            sa.Enum("FOOD", name="place_type", native_enum=False),
            nullable=False,
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("place_type", "name", name="uq_tag_type_place_type"),
    )
    op.create_index(op.f("ix_tag_types_id"), "tag_types", ["id"], unique=False)
    op.create_index(op.f("ix_tag_types_name"), "tag_types", ["name"], unique=False)
    op.create_index(
        op.f("ix_tag_types_place_type"), "tag_types", ["place_type"], unique=False
    )
    op.create_table(
        "tags",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("tag_type_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["tag_type_id"],
            ["tag_types.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "tag_type_id", name="uq_tag_name_tag_type_id"),
    )
    op.create_index(op.f("ix_tags_id"), "tags", ["id"], unique=False)
    op.create_table(
        "places_tags",
        sa.Column("place_id", sa.UUID(), nullable=False),
        sa.Column("tag_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["place_id"],
            ["places.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tags.id"],
        ),
        sa.PrimaryKeyConstraint("place_id", "tag_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("places_tags")
    op.drop_index(op.f("ix_tags_id"), table_name="tags")
    op.drop_table("tags")
    op.drop_index(op.f("ix_tag_types_place_type"), table_name="tag_types")
    op.drop_index(op.f("ix_tag_types_name"), table_name="tag_types")
    op.drop_index(op.f("ix_tag_types_id"), table_name="tag_types")
    op.drop_table("tag_types")
    # ### end Alembic commands ###
