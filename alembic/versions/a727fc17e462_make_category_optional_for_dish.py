"""Make category optional for dish

Revision ID: a727fc17e462
Revises: b17d2f413e29
Create Date: 2025-05-11 15:40:22.133431

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "a727fc17e462"
down_revision: Union[str, None] = "b17d2f413e29"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("dishes", "category_id", existing_type=sa.UUID(), nullable=True)
    op.drop_constraint("dishes_category_id_fkey", "dishes", type_="foreignkey")
    op.create_foreign_key(
        "dishes_category_id_fkey", "dishes", "dish_categories", ["category_id"], ["id"], ondelete="SET NULL"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # First, delete any dishes that have NULL category_id
    op.execute("DELETE FROM dishes WHERE category_id IS NULL")

    # Then proceed with the schema changes
    op.drop_constraint("dishes_category_id_fkey", "dishes", type_="foreignkey")
    op.create_foreign_key(
        "dishes_category_id_fkey", "dishes", "dish_categories", ["category_id"], ["id"], ondelete="CASCADE"
    )
    op.alter_column("dishes", "category_id", existing_type=sa.UUID(), nullable=False)
    # ### end Alembic commands ###
